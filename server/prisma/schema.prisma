// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id       Int       @id @default(autoincrement())
  username String    @unique
  password String
  profile  profile[]
  order    order[]
  isAdmin  Boolean   @default(false)
  cart     cart[]
  review   review?
}

model profile {
  id          Int     @id @unique @default(autoincrement())
  name        String
  email       String  @unique
  phoneNumber Int     @unique
  address     String?
  user        user    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  userId      Int     @unique
}

model category {
  id           Int             @id @default(autoincrement())
  categoryName productCategory
  petCategory  pets
}

model product {
  id           Int             @id @unique @default(autoincrement())
  name         String
  image        String
  price        String
  description  String
  categoryName productCategory
  petCategory  pets
  order        order[]
  inventory    inventory[]
  cartItem     cartItem[]
  review       review[]

  @@index([categoryName])
}

model order {
  id        Int      @id @unique @default(autoincrement())
  orderedAt DateTime @default(now())
  product   product  @relation(fields: [productId], references: [id])
  productId Int
  user      user     @relation(fields: [userId], references: [id])
  userId    Int
  quantity  Int
}

model cart {
  id         Int        @id @unique @default(autoincrement())
  user       user       @relation(fields: [userId], references: [id])
  userId     Int        @unique
  cartItem   cartItem[]
  cartStatus status     @default(active)
}

model cartItem {
  id          Int      @id @unique @default(autoincrement())
  itemAddedAt DateTime @default(now())
  quantity    Int
  product     product  @relation(fields: [productId], references: [id])
  productId   Int      @unique
  cart        cart     @relation(fields: [cartId], references: [id])
  cartId      Int
}

model inventory {
  id        Int     @id @unique @default(autoincrement())
  product   product @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
}

model review {
  id        Int      @id @unique @default(autoincrement())
  content   String
  rating    Float
  postAt    DateTime @default(now())
  user      user    @relation(fields: [userId], references: [id])
  userId    Int      @unique
  product   product  @relation(fields: [productId], references: [id])
  productId Int
}

enum productCategory {
  toy
  clothes
  food
  accessories
}

enum pets {
  dog
  cat
  smallPet
}

enum role {
  admin
  user
}

enum status {
  active
  archived
}
